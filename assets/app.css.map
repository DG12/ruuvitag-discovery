{
  "version": 3,
  "file": "app.css",
  "sources": [
    "App.svelte",
    "ColumsSelect.svelte",
    "TargetEdit.svelte",
    "Tooltip.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { Container, Row, Col } from \"sveltestrap\";\n\timport PanelDiscover from './Discover/Panel.svelte';\n\timport PanelTargets from './Targets/Panel.svelte';\n\timport PanelConfig from './Config/Panel.svelte';\n\texport let ws;\n\texport let ruuvi;\n\tlet addon = {\n\t\tname: `RuuviTags Discovery`,\n\t\tversion: `0.0.1`,\n\t\turl: `https://github.com/balda/ruuvitag-discovery`,\n\t};\n\tlet config = {\n\t\tmeasures: [],\n\t\ttargets: [],\n\t};\n\tlet tags = [];\n\tlet targets = [];\n\tlet ruuvitags = {};\n\tlet cols = [];\n\t// let cols = [\n\t//     {\n\t//         title: `Name`,\n\t//         field: `name`,\n\t//         class: `text-left`,\n\t//         render: (tag, field = `last`) => {\n\t//             let name = `${tag.id.substring(0,4)}`;\n\t//             if (tag.id && ruuvitags[tag.id]) {\n\t//                 name = `${ruuvitags[tag.id]}`;\n\t//             }\n\t//             return `\n\t//                 <a href=\"#\" class=\"rename-ruuvitag mr-2 app-color\" data-id=\"${tag.id}\"><i class=\"fas fa-edit\"></i></a>\n\t//                 <span class=\"jstooltip\" title=\"${tag.id}\">\n\t//                     ${name}\n\t//                 </span>\n\t//             `;\n\t//         },\n\t// \t},\n\t// ];\n\tlet panel = `discover`;\n\tws.onopen = () => {\n\t\tconsole.log(`ws connected`);\n\t};\n\tws.onmessage = (message) => {\n\t\ttry {\n\t\t\tconst data = JSON.parse(message.data);\n\t\t\tif (data.addon) {\n\t\t\t\tconsole.log(data);\n\t\t\t\taddon = data.addon;\n\t\t\t}\n\t\t\tif (data.config) {\n\t\t\t\tconfig = data.config;\n\t\t\t\tif (data.config.targets) {\n\t\t\t\t\ttargets = data.config.targets;\n\t\t\t\t}\n\t\t\t\tif (data.config.ruuvitags) {\n\t\t\t\t\truuvitags = data.config.ruuvitags;\n\t\t\t\t}\n\t\t\t\t// if (data.config.columns) {\n\t\t\t\t// \tcols = Object.keys(data.config.columns).map(field => {\n\t\t\t\t// \t\treturn {\n\t\t\t\t// \t\t\tfield,\n\t\t\t\t// \t\t}\n\t\t\t\t// \t});\n\t\t\t\t// }\n\t\t\t}\n\t\t\tif (data.measures) {\n\t\t\t\tconfig.measures = data.measures;\n\t\t\t\tcols = config.measures.map(measure => {\n\t\t\t\t\tmeasure.render = `measure`;\n\t\t\t\t\t// measure.show = true;\n\t\t\t\t\tmeasure.show = measure.required === undefined;\n\t\t\t\t\treturn measure;\n\t\t\t\t});\n\t\t\t\tcols.splice(0, 0, {\n\t\t\t\t\tlabel: `ID`,\n\t\t\t\t\tfield: `id`,\n\t\t\t\t\tclass: `text-left`,\n\t\t\t\t\trender: `text`,\n\t\t\t\t\tshow: true,\n\t\t\t\t}, {\n\t\t\t\t\tlabel: `Mac Address`,\n\t\t\t\t\tfield: `mac`,\n\t\t\t\t\tclass: `text-left`,\n\t\t\t\t\trender: `text`,\n\t\t\t\t\tshow: true,\n\t\t\t\t});\n\t\t\t\tcols.push({\n\t\t\t\t\tlabel: `Last seen`,\n\t\t\t\t\tfield: `ts`,\n\t\t\t\t\trender: `date`,\n\t\t\t\t\tshow: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (data.targets) {\n\t\t\t\tconfig.targets = data.targets;\n\t\t\t}\n\t\t\tif (data.tag) {\n\t\t\t\tconst tagIndex = tags.findIndex(tag => tag.id === data.tag.id);\n\t\t\t\ttags[tagIndex === -1 ? tags.length : tagIndex] = data.tag;\n\t\t\t\t// console.log(`${data.tag.id} - ${data.tag.samples}`);\n\t\t\t\t// console.log(data.tag);\n\t\t\t}\n\t\t\t// console.log({config: config.targets}); // targets dict\n\t\t\t// console.log({targets}); // targets config\n\t\t} catch(error) {}\n\t};\n</script>\n\n<style>\n    main small :global(.custom-control-label) {\n        padding-top: 2px;\n    }\n</style>\n\n<main>\n\t<Container fluid id=\"page\">\n\t\t<Row class=\"app-bgcolor\" id=\"header\">\n\t\t\t<Col xs=\"8\" class=\"p-3 pl-4\">\n\t\t\t\t<span class=\"mr-4\">{addon.name}</span>\n\t\t\t\t<a on:click|preventDefault={() => {panel = `discover`}} class=\"mr-4 text-white text-decoration-none\" href=\"/\">\n\t\t\t\t\t<i class=\"fab fa-bluetooth fa-sm\"></i>\n\t\t\t\t\t<small class=\"ml-1 {panel === `discover` ? `font-weight-bolder` : `font-weight-lighter`}\">\n\t\t\t\t\t\tDiscover\n\t\t\t\t\t</small>\n\t\t\t\t</a>\n\t\t\t\t<a on:click|preventDefault={() => {panel = `targets`}} class=\"mr-4 text-white text-decoration-none\" href=\"/\">\n\t\t\t\t\t<i class=\"fas fa-database fa-sm\"></i>\n\t\t\t\t\t<small class=\"ml-1 {panel === `targets` ? `font-weight-bolder` : `font-weight-lighter`}\">\n\t\t\t\t\t\tTargets\n\t\t\t\t\t</small>\n\t\t\t\t</a>\n\t\t\t\t<a on:click|preventDefault={() => {panel = `config`}} class=\"mr-4 text-white text-decoration-none\" href=\"/\">\n\t\t\t\t\t<i class=\"fas fa-cog fa-sm\"></i>\n\t\t\t\t\t<small class=\"ml-1 {panel === `config` ? `font-weight-bolder` : `font-weight-lighter`}\">\n\t\t\t\t\t\tConfiguration\n\t\t\t\t\t</small>\n\t\t\t\t</a>\n\t\t\t</Col>\n\t\t\t<Col xs=\"4\" class=\"m-auto pr-4\">\n\t\t\t\t<div class=\"float-right\">\n\t\t\t\t\t<small>\n\t\t\t\t\t\t<em>\n\t\t\t\t\t\t\t<a class=\"text-white font-weight-lighter text-decoration-none\" href=\"{addon.url}/blob/master/CHANGELOG.md\" target=\"_blank\">\n\t\t\t\t\t\t\t\tv{addon.version}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</em>\n\t\t\t\t\t</small>\n\t\t\t\t\t<a class=\"ml-2 text-white\" href=\"{addon.url}\" target=\"_blank\">\n\t\t\t\t\t\t<i class=\"fab fa-github fa-sm\"></i>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a class=\"ml-1 text-white\" href=\"https://ruuvi.com/\" target=\"_blank\">\n\t\t\t\t\t\t{@html ruuvi}\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</Col>\n\t\t</Row>\n\t\t<div class=\"mb-4\">\n\t\t\t{#if panel === `discover`}\n\t\t\t\t<PanelDiscover {tags} {targets} {ruuvitags} {cols} />\n\t\t\t{/if}\n\t\t\t{#if panel === `targets`}\n\t\t\t\t<PanelTargets {tags} {targets} config={config.targets} measures={config.measures} />\n\t\t\t{/if}\n\t\t\t{#if panel === `config`}\n\t\t\t\t<PanelConfig {config} {targets} {cols} />\n\t\t\t{/if}\n\t\t</div>\n\t</Container>\n</main>\n",
    "<script>\n    import { createEventDispatcher } from 'svelte';\n    import { FormGroup, CustomInput, Label, Row, Col } from 'sveltestrap';\n    export let cols = [];\n    const dispatch = createEventDispatcher();\n    let showSelectColumns = false;\n    function changeColumn(event) {\n        dispatch(`changed`, {\n            col: event.target.name,\n        });\n    };\n</script>\n\n<style>\n    .select-columns :global(.custom-control-label) {\n        padding-top: 2px;\n    }\n</style>\n\n<CustomInput\n    bind:checked={showSelectColumns}\n    type=\"switch\"\n    id=\"selectColumns\"\n    name=\"selectColumns\"\n    label=\"Select Columns\" />\n\n<div class=\"select-columns\">\n    {#if showSelectColumns}\n        <Row>\n            {#each cols as col (col.field)}\n                <Col sm=\"6\" md=\"4\" lg=\"3\" xl=\"2\" class=\"font-weight-lighter small parent\">\n                    <CustomInput\n                        bind:checked={col.show}\n                        on:change={changeColumn}\n                        type=\"switch\"\n                        bsSize=\"sm\"\n                        inline=true\n                        id=\"show_{col.field}\"\n                        name=\"{col.field}\"\n                        label=\"{col.label || col.field}\" />\n                </Col>\n            {/each}\n        </Row>\n    {/if}\n</div>\n\n<!-- <pre>{JSON.stringify(cols, null, 2)}</pre> -->\n",
    "<script>\n    import { createEventDispatcher } from 'svelte';\n    import { Form, FormGroup, FormText, Input, CustomInput, Label, Button, Table, Row, Col } from 'sveltestrap';\n    // import Tooltip from './../UI/Tooltip.svelte';\n    import TargetTag from  './TargetTag.svelte';\n    export let tags = [];\n    export let target = {};\n    export let config = {};\n    export let measures = [];\n    $: targetTags = target.tags || [];\n    const dispatch = createEventDispatcher();\n    function cancelEdit() {\n        dispatch(`cancelEdit`);\n    };\n    let enable = 1 * target.enable;\n</script>\n\n<style>\n    .targets :global(.custom-control-label) {\n        padding-top: 2px;\n    }\n</style>\n\n<div class=\"targets\">\n    <div class=\"mt-1 pt-2\">\n        <a href=\"/\" on:click|preventDefault={cancelEdit}\n         class=\"btn btn-light btn-sm\">\n            Cancel\n        </a>\n        <a href=\"/\" on:click|preventDefault={cancelEdit}\n         class=\"btn btn-light btn-sm\">\n            Save\n        </a>\n    </div>\n\n    <Row>\n        <Col xs=\"4\" class=\"mt-3\">\n            <Form class=\"small\">\n                <FormGroup class=\"row\">\n                    <Label class=\"col-sm-4\" for=\"enable\">{config.label}</Label>\n                    <div class=\"col-sm-8\">\n                        <CustomInput\n                            bind:checked={enable}\n                            type=\"switch\"\n                            id=\"enable\"\n                            name=\"enable\"\n                            label=\"Enable\" />\n                    </div>\n                </FormGroup>\n                <FormGroup class=\"row\">\n                    <Label class=\"col-sm-4\" for=\"name\">Name</Label>\n                    <div class=\"col-sm-8\">\n                        <Input\n                            bind:value={target.name}\n                            type=\"text\"\n                            size=\"sm\"\n                            id=\"name\"\n                            name=\"name\"\n                            placeholder=\"Name\" />\n                    </div>\n                </FormGroup>\n                <FormGroup class=\"row\">\n                    <Label class=\"col-sm-4\" for=\"interval\">Interval</Label>\n                    <div class=\"col-sm-8\">\n                        <Input\n                            bind:value={target.interval}\n                            type=\"number\"\n                            size=\"sm\"\n                            id=\"interval\"\n                            name=\"interval\"\n                            placeholder=\"60\" />\n                    </div>\n                </FormGroup>\n                {#each config.config as field}\n                    <FormGroup class=\"row\">\n                        <Label class=\"col-sm-4\" for=\"{field.name}\">{field.name}</Label>\n                        <div class=\"col-sm-8\">\n                            <Input\n                                bind:value={target[field.name]}\n                                type={field.type || `text`}\n                                size=\"sm\"\n                                id=\"{field.name}\"\n                                name=\"{field.name}\" />\n                        </div>\n                    </FormGroup>\n                {/each}\n                {#if config.measurement}\n                    <FormGroup class=\"row\">\n                        <Label class=\"col-sm-4\" for=\"measurement\">Measurement</Label>\n                        <div class=\"col-sm-8\">\n                            <CustomInput\n                                bind:value={target.measurement}\n                                type=\"select\"\n                                class=\"custom-select-sm\"\n                                id=\"measurement\"\n                                name=\"measurement\"\n                            >\n                                <option value=\"tag\">Tag</option>\n                                <option value=\"measure\">Measure</option>\n                                <option value=\"both\">Both</option>\n                            </CustomInput>\n                        </div>\n                    </FormGroup>\n                {/if}\n            </Form>\n            <!-- <pre>{JSON.stringify(target.tags, null, 2)}</pre> -->\n        </Col>\n        <Col xs=\"8\" class=\"mt-3\">\n            <p>Tags</p>\n            {#each tags as tag (tag.id)}\n                <TargetTag {tag} target={targetTags[tag.id]} {measures} />\n            {/each}\n        </Col>\n    </Row>\n</div>\n\n<!-- <pre>{JSON.stringify(config, null, 2)}</pre> -->\n<!-- <pre>{JSON.stringify(target.tags, null, 2)}</pre> -->\n",
    "<script>\n  export let tip = \"\";\n  export let top = false;\n  export let right = false;\n  export let bottom = false;\n  export let left = false;\n  export let active = false;\n  export let color = \"white\";\n  export let bgcolor = \"black\";\n\n  let style = `color: ${color}; background-color: ${bgcolor};`;\n  function hide() {\n      active = false;\n  }\n</script>\n\n<style>\n  .tooltip-wrapper {\n    position: relative;\n    display: inline-block;\n  }\n  .tooltip {\n    position: absolute;\n    font-family: inherit;\n    display: inline-block;\n    white-space: nowrap;\n    color: inherit;\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 150ms, visibility 150ms;\n  }\n\n  .default-tip {\n    display: inline-block;\n    padding: 8px 16px;\n    border-radius: 6px;\n    color: inherit;\n  }\n\n  .tooltip.top {\n    left: 50%;\n    transform: translate(-50%, -100%);\n    margin-top: -8px;\n  }\n\n  .tooltip.bottom {\n    left: 50%;\n    bottom: 0;\n    transform: translate(-50%, 100%);\n    margin-bottom: -8px;\n  }\n\n  .tooltip.left {\n    left: 0;\n    transform: translateX(-100%);\n    margin-left: -8px;\n  }\n\n  .tooltip.right {\n    right: 0;\n    transform: translateX(100%);\n    margin-right: -8px;\n  }\n\n  .tooltip.active {\n    opacity: 1;\n    visibility: initial;\n  }\n\n  .tooltip-slot:hover + .tooltip {\n    opacity: 1;\n    visibility: initial;\n  }\n</style>\n\n<div class=\"tooltip-wrapper\">\n  <span class=\"tooltip-slot\">\n    <slot />\n  </span>\n  <div\n    on:click={hide}\n    class=\"tooltip\"\n    class:active\n    class:left\n    class:right\n    class:bottom\n    class:top>\n    {#if tip}\n      <small class=\"default-tip\" {style}>{@html tip}</small>\n    {:else}\n      <slot name=\"custom-tip\" />\n    {/if}\n\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AA8GI,kBAAI,CAAC,mBAAK,CAAC,AAAQ,qBAAqB,AAAE,CAAC,AACvC,WAAW,CAAE,GAAG,AACpB,CAAC;AClGD,8BAAe,CAAC,AAAQ,qBAAqB,AAAE,CAAC,AAC5C,WAAW,CAAE,GAAG,AACpB,CAAC;ACED,uBAAQ,CAAC,AAAQ,qBAAqB,AAAE,CAAC,AACrC,WAAW,CAAE,GAAG,AACpB,CAAC;ACHH,gBAAgB,8BAAC,CAAC,AAChB,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,YAAY,AACvB,CAAC,AACD,QAAQ,8BAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,WAAW,CAAE,OAAO,CACpB,OAAO,CAAE,YAAY,CACrB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,OAAO,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,KAAK,AAC7C,CAAC,AAED,YAAY,8BAAC,CAAC,AACZ,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,QAAQ,IAAI,8BAAC,CAAC,AACZ,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,KAAK,CAAC,CACjC,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,QAAQ,OAAO,8BAAC,CAAC,AACf,IAAI,CAAE,GAAG,CACT,MAAM,CAAE,CAAC,CACT,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,QAAQ,KAAK,8BAAC,CAAC,AACb,IAAI,CAAE,CAAC,CACP,SAAS,CAAE,WAAW,KAAK,CAAC,CAC5B,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,QAAQ,MAAM,8BAAC,CAAC,AACd,KAAK,CAAE,CAAC,CACR,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,YAAY,CAAE,IAAI,AACpB,CAAC,AAED,QAAQ,OAAO,8BAAC,CAAC,AACf,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,AACrB,CAAC,AAED,4BAAa,MAAM,CAAG,QAAQ,eAAC,CAAC,AAC9B,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,AACrB,CAAC"
}